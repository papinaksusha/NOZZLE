function [f1,f2] = Nozzle_5_full(x,init,options,T_cr,p_cr,v_cr)

global k h c w wx m theta_r D I sw_o sw_n ex_model

n_cr = p_cr/k/T_cr;

[f1,f2] = ode15s(@nozzle_5,x,init,options);

    function dy = nozzle_5(x,y)
    % Без возбуждения NO
    
    l_N2 = I(sw_o,1);
    l_O2 = I(sw_o,2);
    
   % dy = zeros(l_N2 + 1 + l_O2 + 1 + 5 , 1); %  90 *1
    A = zeros(l_N2 +1 + l_O2 + 1 + 5 , l_N2 + 1 + l_O2 + 1 + 5); 
    b = zeros(l_N2 + 1 + l_O2 + 1 + 5 , 1);
    S = zeros(2); % S(1) сама площадь, S(2) производная
    
    % геом параметры сопла
    switch sw_n
        case 1
             r_cr = 1e-3;
    end
    
    % безразмерные переменные

    n_N2 = y(1 : l_N2 + 1);
    n_O2 = y(l_N2 + 2 : l_N2 + l_O2 + 2);
    n_NO = y(l_N2 + l_O2 + 3);
    n_N = y(l_N2 + l_O2 + 4);
    n_O = y(l_N2 + l_O2 + 5);
    v = y(l_N2 + l_O2 + 6);
    T = y(l_N2 + l_O2 + 7);
    %xx = x./r_cr;
    M_cr = sum(m); 
    M = m./M_cr;
    
    n = [n_N2' n_O2' n_NO n_N n_O];
    Mn = [M(1).*n_N2' M(2).*n_O2' M(3)*n_NO M(4)*n_N M(5)*n_O];
    
    switch sw_n
        case 1
            alpha = 0.117*pi;
            S(1) = (1+x*tan(alpha))^2;
            S(2) = 2*tan(alpha)*(1+x*tan(alpha));
    end
    
    % вектора колебательных энергий молекул
     e = e_i_c;
     e_i_N2 = cell2mat(e(1))./k./T_cr; %1*48
     e_i_O2 = cell2mat(e(2))./k./T_cr;
     e_i = [e_i_N2 e_i_O2];
     e_i_NO = cell2mat(e(3))./k./T_cr;
    
     % энергии образования
     
     e_NO = (D(1)/2 + D(2)/2 - D(3))/k/T_cr;
     e_N = D(1)/2/k/T_cr;
     e_O = D(2)/2/k/T_cr;
     
     % 'энергии нулевых уровней
     
     e_0_N2 = h*c/k/T_cr*(w(1)/2 - wx(1)/4);
     e_0_O2 = h*c/k/T_cr*(w(2)/2 - wx(2)/4);
     e_0 = [e_0_N2.*ones(1,l_N2 + 1) e_0_O2.*ones(1,l_O2 + 1)];
     e_0_NO = h*c/k/T_cr*(w(3)/2 - wx(3)/4);
     
  %   Z_vibr_NO = sum(exp(-e_i_NO./T));
  %   E_vibr_NO = sum((e_i_NO + e_0_NO).*exp(-e_i_NO./T))/Z_vibr_NO;
  %   C_vibr_NO = T^(-2)*(sum((e_i_NO + e_0_NO).*e_i_NO.*exp(-e_i_NO./T))/Z_vibr_NO - ...
  %               E_vibr_NO*sum(e_i_NO.*exp(-e_i_NO./T))/Z_vibr_NO);
     
     %% ЛЧ, матрица А

    for j = 1 : l_N2 + 1 + l_O2 + 1
        A(j,j) = v;     % уравнения кинетики
        A(j,l_N2 + l_O2 + 6) = n(j);     % уравнения кинетики
        A(l_N2 + l_O2 + 6 , j) = T;  % уравнение импульса
        A(l_N2 + l_O2 + 7 , j) = 2.5*T + e_i(j) + e_0(j);  % уравнение энергии???? e_0 ???
    end
    
    for j = l_N2 + l_O2 + 3  : l_N2 + l_O2 + 5
        A(j,j) = v;     % уравнения кинетики
        A(j,l_N2 + l_O2 + 6) = n(j);     % уравнения кинетики
        A(l_N2 + l_O2 + 6 , j) = T;  % уравнение импульса
    end
    % уравнение импульса
    
    A(l_N2 + l_O2 + 6 , l_N2 + l_O2 + 6) = M_cr*v_cr^2/k/T_cr * v *sum(Mn);
    A(l_N2 + l_O2 + 6 , l_N2 + l_O2 + 7) = sum(n);
    
    % уравнение энергии
    
    A(l_N2 + l_O2 + 7 , l_N2 + l_O2 + 3) = 2.5*T + e_0_NO + e_NO;
    A(l_N2 + l_O2 + 7 , l_N2 + l_O2 + 4) = 1.5*T + e_N;
    A(l_N2 + l_O2 + 7 , l_N2 + l_O2 + 5) = 1.5*T + e_O;
    A(l_N2 + l_O2 + 7 , l_N2 + l_O2 + 6) = 1/v*(sum((3.5*T + e_i + e_0).*n(1 : l_N2 + l_O2 + 2)) + ...
                                               n_NO*(3.5*T + e_0_NO + e_NO) + ...
                                               n_N*(2.5*T + e_N) + n_O*(2.5*T + e_O));
    A(l_N2 + l_O2 + 7 , l_N2 + l_O2 + 7) = 2.5*(sum(n_N2) + sum(n_O2) + n_NO) + ...
                                           + 1.5*n_N + 1.5*n_O;
    AA = sparse(A);
    
    %% ПЧ вектор b
    % коэффициенты
        % размерные переменные
    
    n_N2_d = [0 n_N2'.*n_cr 0]'*ones(1,5); %50*5
    n_O2_d = [0 n_O2'.*n_cr 0]'*ones(1,5);
    n_NO_d = n_NO*n_cr;
    n_N_d = n_N*n_cr;
    n_O_d = n_O*n_cr;
    T_d = T*T_cr;
    
    % колебательный обмен
    
    [k_N2_VT, k_N2_N2_VV, k_N2_O2_VV, ~] = k_ssh(1,T_d);
    [k_O2_VT, k_O2_N2_VV, k_O2_O2_VV, ~] = k_ssh(2,T_d);
    
    %%% VT

    k_N2_VT_r = k_N2_VT.*exp(-(e_i_N2(2 : end) - e_i_N2(1 : end-1))'*ones(1,5)./T); %детальный баланс
    k_O2_VT_r = k_O2_VT.*exp(-(e_i_O2(2 : end) - e_i_O2(1 : end-1))'*ones(1,5)./T);
    
    k_N2_VT = [zeros(1,5); k_N2_VT; zeros(1,5)]; %49*5
    k_O2_VT = [zeros(1,5); k_O2_VT; zeros(1,5)];
    k_N2_VT_r = [zeros(1,5); k_N2_VT_r; zeros(1,5)]; %49*5
    k_O2_VT_r = [zeros(1,5); k_O2_VT_r; zeros(1,5)];
    
    n_c_N2 = ones(l_N2 + 1,1)*[sum(n_N2) sum(n_O2) n_NO n_N n_O].*n_cr; % мб убрать n-cr  а потом др коэфф обезраз? короче, подумать как лучше обезраз релакс члены
    %*  48*5
    R_N2_VT = sum(n_c_N2.*(n_N2_d(1 : end - 2,:).*k_N2_VT_r(1 : end - 1,:) - ...
                        n_N2_d(2 : end - 1,:).*k_N2_VT(1 : end - 1,:) + ...
                        n_N2_d(3 : end,:).*k_N2_VT(2 : end,:) - ...
                        n_N2_d(2 : end - 1,:).*k_N2_VT_r(2 : end,:)) , 2); %48*1
                    
    n_c_O2 = ones(l_O2 + 1,1)*[sum(n_N2) sum(n_O2) n_NO n_N n_O].*n_cr; 
    
    R_O2_VT = sum(n_c_O2.*(n_O2_d(1 : end - 2,:).*k_O2_VT_r(1 : end - 1,:) - ...
                        n_O2_d(2 : end - 1,:).*k_O2_VT(1 : end - 1,:) + ...
                        n_O2_d(3 : end,:).*k_O2_VT(2 : end,:) - ...
                        n_O2_d(2 : end - 1,:).*k_O2_VT_r(2 : end,:)) , 2);
    %%% VV
    
    n_N2_d = [0 n_N2'.*n_cr 0]; %1*50
    n_O2_d = [0 n_O2'.*n_cr 0];
    
    k_N2_N2_VV_r = k_N2_N2_VV.*exp(-((e_i_N2(2 : end) - e_i_N2(1 : end-1))'*ones(1,l_N2) + ... % переписать через diff
                                   ones(l_N2,1)*(e_i_N2(1 : end-1) - e_i_N2(2 : end)))./T);
    k_O2_O2_VV_r = k_O2_O2_VV.*exp(-((e_i_O2(2 : end) - e_i_O2(1 : end-1))'*ones(1,l_O2) + ...
                                   ones(l_O2,1)*(e_i_O2(1 : end-1) - e_i_O2(2 : end)))./T);

    k_N2_N2_VV = [zeros(1,l_N2) ; k_N2_N2_VV; zeros(1,l_N2)]; %49*47
    k_O2_O2_VV = [zeros(1,l_O2) ; k_O2_O2_VV; zeros(1,l_O2)];
    k_N2_N2_VV_r = [zeros(1,l_N2) ; k_N2_N2_VV_r; zeros(1,l_N2)]; %49*47
    k_O2_O2_VV_r = [zeros(1,l_O2) ; k_O2_O2_VV_r; zeros(1,l_O2)];
    
    R_N2_VV = sum(n_N2_d(1 : end - 2)'*n_N2_d(3 : end - 1).*k_N2_N2_VV_r(1 : end - 1, :) - ...
                  n_N2_d(2 : end - 1)'*n_N2_d(2 : end - 2).*k_N2_N2_VV(1 : end - 1, :) + ...
                  n_N2_d(3 : end)'*n_N2_d(2 : end - 2).*k_N2_N2_VV(2 : end, :) - ...
                  n_N2_d(2 : end - 1)'*n_N2_d(3 : end - 1).*k_N2_N2_VV_r(2 : end, :) , 2); % 48*1
    
    R_O2_VV = sum(n_O2_d(1 : end - 2)'*n_O2_d(3 : end - 1).*k_O2_O2_VV_r(1 : end - 1, :) - ...
                  n_O2_d(2 : end - 1)'*n_O2_d(2 : end - 2).*k_O2_O2_VV(1 : end - 1, :) + ...
                  n_O2_d(3 : end)'*n_O2_d(2 : end - 2).*k_O2_O2_VV(2 : end, :) - ...
                  n_O2_d(2 : end - 1)'*n_O2_d(3 : end - 1).*k_O2_O2_VV_r(2 : end, :) , 2);
    
    k_N2_O2_VV_r =  k_N2_O2_VV.*exp(-((e_i_N2(2 : end) - e_i_N2(1 : end-1))'*ones(1,l_O2) + ...
                                    ones(l_N2,1)*(e_i_O2(1 : end-1) - e_i_O2(2 : end)))./T);
    k_O2_N2_VV_r =  k_O2_N2_VV.*exp(-((e_i_O2(2 : end) - e_i_O2(1 : end-1))'*ones(1,l_N2) + ...
                                    ones(l_O2,1)*(e_i_N2(1 : end-1) - e_i_N2(2 : end)))./T);   
    
    k_N2_O2_VV = [zeros(1,l_O2);  k_N2_O2_VV; zeros(1,l_O2)];
    k_N2_O2_VV_r = [zeros(1,l_O2);  k_N2_O2_VV_r; zeros(1,l_O2)];
    k_O2_N2_VV = [zeros(1,l_N2);  k_O2_N2_VV ; zeros(1,l_N2)];
    k_O2_N2_VV_r = [zeros(1,l_N2);  k_O2_N2_VV_r; zeros(1,l_N2)];
    
    R_N2_VV_s = sum(n_N2_d(1 : end - 2)'*n_O2_d(3 : end - 1).*k_N2_O2_VV_r(1 : end - 1, :) - ...
                  n_N2_d(2 : end - 1)'*n_O2_d(2 : end - 2).*k_N2_O2_VV(1 : end - 1, :) + ...
                  n_N2_d(3 : end)'*n_O2_d(2 : end-2).*k_N2_O2_VV(2 : end, :) - ...
                  n_N2_d(2 : end - 1)'*n_O2_d(3 : end - 1).*k_N2_O2_VV_r(2 : end, :) , 2);
    
    R_O2_VV_s = sum(n_O2_d(1 : end - 2)'*n_N2_d(3 : end - 1).*k_O2_N2_VV_r(1 : end - 1, :) - ...
                  n_O2_d(2 : end - 1)'*n_N2_d(2 : end - 2).*k_O2_N2_VV(1 : end - 1, :) + ...
                  n_O2_d(3 : end)'*n_N2_d(2 : end-2).*k_O2_N2_VV(2 : end, :) - ...
                  n_O2_d(2 : end - 1)'*n_N2_d(3 : end - 1).*k_O2_N2_VV_r(2 : end, :) , 2);
    
    R_N2_vibr = R_N2_VT + R_N2_VV + R_N2_VV_s; %48*1
    R_O2_vibr = R_O2_VT + R_O2_VV + R_O2_VV_s; 
    
    % химический обмен атомами
    
    n_N2_d = n_N2.*n_cr;
    n_O2_d = n_O2.*n_cr;
    
    k_ex_N2 = k_ex(1,T_d); % 48*4
    k_ex_O2 = k_ex(2,T_d);
    
    k_ex_N2_r = k_ex_N2.*(m(1)*m(5)/m(3)/m(4))^(1.5).*...
                    theta_r(3)/theta_r(1)*0.5.*exp(-e_i_N2'*ones(1,4)./T + D(1)/k/T_d - D(3)/k/T_d);
    k_ex_O2_r = k_ex_O2.*(m(2)*m(4)/m(3)/m(5))^(1.5).*...
                     theta_r(3)/theta_r(2)*0.5.*exp(-e_i_O2'*ones(1,4)./T + D(2)/k/T_d - D(3)/k/T_d);
    
    R_N2_ex = n_NO_d*n_N_d.*k_ex_N2_r(:,ex_model) - n_N2_d.*n_O_d.*k_ex_N2(:,ex_model); %48*1
    R_O2_ex = n_NO_d*n_O_d.*k_ex_O2_r(:,ex_model) - n_O2_d.*n_N_d.*k_ex_O2(:,ex_model);
    R_NO_ex = -sum(R_N2_ex) - sum(R_O2_ex);
    R_N_ex = -sum(R_N2_ex) + sum(R_O2_ex);
    R_O_ex = sum(R_N2_ex) - sum(R_O2_ex);
    
    % диссоциация
    
    n_N2_d = n_N2.*n_cr*ones(1,5); %48*5
    n_O2_d = n_O2.*n_cr*ones(1,5);
    
    k_diss_N2 = k_diss(1,T_d); % 1*48 
    k_diss_N2 = k_diss_N2'*ones(1,5) ;% потому что не различается для партнера 48*5
    k_diss_O2 = k_diss(2,T_d);
    k_diss_O2 = k_diss_O2'*ones(1,5);
    k_diss_NO = 6.81e-12*T_d^(-1)*exp(-D(3)/k/T_d);
    
    k_rec_N2 = k_diss_N2.*(m(1)/m(4)^2)^(1.5).*h^3.*(2*pi*k*T_d)^(-1.5).*...
                T_d./theta_r(1).*0.5.*exp(-e_i_N2'*ones(1,5)./T + D(1)/k/T_d); 
    k_rec_O2 = k_diss_O2.*(m(2)/m(5)^2)^(1.5).*h^3.*(2*pi*k*T_d)^(-1.5).*...
               T_d./theta_r(2).*0.5.*exp(-e_i_O2'*ones(1,5)./T + D(2)/k/T_d);
    Z_NO_int = sum(exp(-e_i_NO./T))*T_d/theta_r(3); % безразмерна экс = размер?
    k_rec_NO = k_diss_NO*(m(3)/m(4)/m(5))^(1.5)*h^3*(2*pi*k*T_d)^(-1.5)*Z_NO_int*exp(D(3)/k/T_d);
    
    R_N2_diss = sum(n_c_N2.*(n_N_d^2.*k_rec_N2 - n_N2_d.*k_diss_N2) , 2);
    R_O2_diss = sum(n_c_O2.*(n_O_d^2.*k_rec_O2 - n_O2_d.*k_diss_O2) , 2);
    R_NO_diss = sum([sum(n_N2) sum(n_O2) n_NO n_N n_O].*n_cr.*(n_N_d*n_O_d*k_rec_NO.*ones(1,5) - ...
                n_NO_d*k_diss_NO.*ones(1,5)));
    R_N_diss = -2*sum(R_N2_diss) - R_NO_diss;
    R_O_diss = -2*sum(R_O2_diss) - R_NO_diss;
    
    R_N2 = r_cr/n_cr/v_cr.*(R_N2_vibr + R_N2_ex + R_N2_diss);
    R_O2 = r_cr/n_cr/v_cr.*(R_O2_vibr + R_O2_ex + R_O2_diss);
    R_NO = r_cr/n_cr/v_cr.*(R_NO_ex + R_NO_diss);
    R_N = r_cr/n_cr/v_cr.*(R_N_ex + R_N_diss);
    R_O = r_cr/n_cr/v_cr.*(R_O_ex + R_O_diss);
   
    %disp(sum(R_N2) + sum(R_O2) + R_NO + R_N + R_O);
    
    b(1 : l_N2 + 1) = R_N2 - v.*n_N2./S(1).*S(2); %%% далее индексы поправить
    b(l_N2 + 2 : l_N2 + l_O2 + 2) = R_O2 - v.*n_O2/S(1)*S(2);
    b(l_N2 + l_O2 + 3) = R_NO - v*n_NO/S(1)*S(2);
    b(l_N2 + l_O2 + 4) = R_N - v*n_N/S(1)*S(2);
    b(l_N2 + l_O2 + 5) = R_O - v*n_O/S(1)*S(2);
    b(l_N2 + l_O2 + 6) = 0;
    b(l_N2 + l_O2 + 7) = -S(2)/S(1)*(sum((3.5*T + e_i + e_0).*n(1 : l_N2 + l_O2 + 2)) + ...
                           n_NO*(3.5*T + E_vibr_NO + e_NO) + ...
                           n_N*(2.5*T + e_N) + n_O*(2.5*T + e_O));
    %%
    
    dy = AA\b;
    
    end

end